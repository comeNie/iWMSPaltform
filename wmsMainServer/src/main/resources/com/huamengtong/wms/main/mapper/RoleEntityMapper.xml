<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huamengtong.wms.main.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.huamengtong.wms.entity.main.TWmsRoleEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="is_active" property="isActive" jdbcType="BIT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="BIGINT" />
  </resultMap>

  <resultMap id="RoleUsersResultMap" type="java.util.LinkedHashMap">
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="is_active" property="isAdmin" jdbcType="BIT" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, tenant_id, role_name, is_active, create_user, create_time, update_user, update_time
  </sql>

  <!-- query where 子句 -->
  <sql id="queryWhereClause">
    <where>
      <if test="id !=null and id != 0">
        AND id = #{id,jdbcType=BIGINT}
      </if>
      <if test="roleName != null" >
        AND role_name = #{roleName,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>

  <!-- order by 子句 -->
  <sql id="queryOrderByClause">
    <if test="orderBy != null">
      ORDER BY ${orderBy}
    </if>
    <if test="orderBy == null">
      ORDER BY create_time desc
    </if>

  </sql>

  <!-- query limit 子句，传递offset参数使用offset，如果不传递通过page和pageSize计算获得offset-->
  <sql id="queryLimitClause">
    <if test="offset != null and offset > 0 and pageSize != null and pageSize > 0">
      LIMIT ${offset}, ${pageSize}
    </if>
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_smart_role
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectRoleNameByIds" resultType="String">
    select role_name from t_smart_role r where r.is_active = 1 AND r.id in
    <foreach collection="list" item="id" index="index"
             open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>

  <select id="queryRolePages" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_smart_role
    <include refid="queryWhereClause"/>
    <include refid="queryOrderByClause"/>
    <include refid="queryLimitClause" />
  </select>

  <select id="queryRolePageCount" resultType="java.lang.Integer" >
    select count(1) from t_smart_role
    <include refid="queryWhereClause"/>
    LIMIT 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_smart_role
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insertRole" parameterType="com.huamengtong.wms.entity.main.TWmsRoleEntity" >
    insert into t_smart_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tenantId != null" >
        #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        #{isActive,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <update id="updateRole" parameterType="com.huamengtong.wms.entity.main.TWmsRoleEntity" >
    update t_smart_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


  <select id="queryRolesByUserPages" resultMap="RoleUsersResultMap" parameterType="java.util.Map">
    SELECT
    tb_b.id, tb_b.`user_id`,tb_b.`role_id`,tb_a.`role_name`,tb_a.`is_active`
    FROM t_smart_user_role tb_b LEFT JOIN t_smart_role tb_a
    ON tb_b.role_id = tb_a.id
    WHERE tb_b.user_id = #{userId,jdbcType=BIGINT} and tb_a.tenant_id = #{tenantId,jdbcType=BIGINT}
    <include refid="queryLimitClause" />
  </select>

  <select id="queryRolesByUserPageCount"  resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT count(1)
    FROM t_smart_user_role tb_b LEFT JOIN t_smart_role tb_a
    ON tb_b.role_id = tb_a.id
    WHERE tb_b.user_id = #{userId,jdbcType=BIGINT} and tb_a.tenant_id = #{tenantId,jdbcType=BIGINT}
    LIMIT 1
  </select>


  <select id="selectRolesByUser" resultMap="BaseResultMap">
    SELECT
    `id`, `tenant_id`, `role_name`, `is_active`
    FROM t_smart_role tb_a
    WHERE
    NOT EXISTS ( SELECT 1 FROM t_smart_user_role tb_b WHERE tb_b.role_id = tb_a.id
    AND  user_id = #{userId,jdbcType=BIGINT}
    )
    AND  tb_a.is_active = 1
  </select>

  <insert id="insertBatchUserRole" useGeneratedKeys="true" parameterType="java.util.List">
    <selectKey resultType="long" keyProperty="id" order="AFTER">
      SELECT
      LAST_INSERT_ID()
    </selectKey>
    INSERT INTO  t_smart_user_role (user_id,role_id,create_user, create_time, update_user, update_time)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      ( #{item.userId}, #{item.roleId},#{item.createUser}, #{item.createTime},#{item.updateUser}, #{item.updateTime})
    </foreach>
  </insert>

  <delete id="deleteBatchUserRole" parameterType="java.lang.Long" >
    delete from t_smart_user_role
    where id IN
    <foreach item="item" collection="ids" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>


</mapper>