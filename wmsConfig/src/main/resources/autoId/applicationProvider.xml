<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd ">

	<!-- 监控中心配置 -->
	<!-- 监控中心协议，如果为protocol="registry"，表示从注册中心发现监控中心地址，否则直连监控中心 -->
	<!--<dubbo:monitor protocol="registry" />-->

	<!-- Application name -->
	<dubbo:application name="wmsAutoIdServer" />

	<dubbo:provider timeout="5000" cluster="failfast" />
	<!-- 集群容错模式： 可以自行扩展集群容错策略，参见：集群扩展 Failover Cluster 失败自动切换，当出现失败，重试其它服务器。(缺省) 
		通常用于读操作，但重试会带来更长延迟。 可通过retries="2"来设置重试次数(不含第一次)。 Failfast Cluster 快速失败，只发起一次调用，失败立即报错。 
		通常用于非幂等性的写操作，比如新增记录。 Failsafe Cluster 失败安全，出现异常时，直接忽略。 通常用于写入审计日志等操作。 Failback 
		Cluster 失败自动恢复，后台记录失败请求，定时重发。 通常用于消息通知操作。 Forking Cluster 并行调用多个服务器，只要一个成功即返回。 
		通常用于实时性要求较高的读操作，但需要浪费更多服务资源。 可通过forks="2"来设置最大并行数。 Broadcast Cluster 广播调用所有提供者，逐个调用，任意一台报错则报错。(2.1.0开始支持) 
		通常用于通知所有提供者更新缓存或日志等本地资源信息。 -->

	<!-- registry address, used for service to register itself -->
	<dubbo:registry client="zkclient" address="${zookeeper.address}" />
	<!-- 用dubbo协议在20880端口暴露服务 -->
	<dubbo:protocol name="dubbo" port="20880" accepts="1000" />

	<!-- Service interface Concurrent Control -->
	<dubbo:service interface="com.huamengtong.wms.client.IAutoIdClient" ref="autoIdClient" />

</beans>