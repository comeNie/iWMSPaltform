<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <description>Spring数据源配置</description>

    <bean id="parentDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.main_w.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>
    <bean id="dataSource" parent="parentDataSource">
        <property name="url" value="${jdbc.main_w.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="dataSource_main_r" parent="parentDataSource">
        <property name="url" value="${jdbc.main_r.url}"/>
        <property name="username" value="${jdbc.dbreader.username}"/>
        <property name="password" value="${jdbc.dbreader.password}"/>
    </bean>

    <bean id="dataSource_inwh0_w" parent="parentDataSource">
        <property name="url" value="${jdbc.inwh0_w.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <bean id="dataSource_inwh0_r" parent="parentDataSource">
        <property name="url" value="${jdbc.inwh0_r.url}"/>
        <property name="username" value="${jdbc.dbreader.username}"/>
        <property name="password" value="${jdbc.dbreader.password}"/>
    </bean>

    <bean id="dynamicDataSource" class="com.huamengtong.wms.core.formwork.db.dao.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSource" key="main_w"></entry>
                <entry value-ref="dataSource_main_r" key="main_r"></entry>
                <entry value-ref="dataSource_inwh0_r" key="inwh0_r"></entry>
                <entry value-ref="dataSource_inwh0_w" key="inwh0_w"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource">
        </property>
    </bean>

    <!--分库切面-->
    <bean id="coreBeforeAdvice" class="com.huamengtong.wms.core.advice.CoreBeforeAdvice"/>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dynamicDataSource" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:com/huamengtong/wms/*/mapper/*Mapper.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.huamengtong.wms.inventory.mapper"/>
    </bean>

</beans>